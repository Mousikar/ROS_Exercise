<launch>
    <!-- 
        1. 准备工作：启动乌龟的GUI节点与键盘控制节点
        2. 需要调用服务生成一只新的乌龟;
        3. 发布两只乌龟的坐标信息;
        4. 订阅坐标信息，并转换成乌龟A相对于乌龟B的坐标信息，最后再生成控制乌龟B的速度信息
    -->
    <!-- 1.启动乌龟GUI -->
    <node pkg="turtlesim" type="turtlesim_node" name="turtle1" output="screen" />
    <node pkg="turtlesim" type="turtle_teleop_key" name="key_control" output="screen"/>
    <!-- 2.生成新的乌龟节点 -->
    <node pkg="tf04_test" type="test01_turtle_spawn_p.py" name="turtle_spawn" output="screen"/>
    <!-- 3. 发布两只乌龟的坐标信息;
        1.复用之前乌龟坐标发布功能;
        2.调用节点时，以参数的方式传递乌龟名称，解析参数置换：订阅的话题消息和子集坐标系名称
     -->
    <node pkg="tf04_test" type="test02_turtle_tf_pub_p.py" name="tf_pub1" args="turtle1" output="screen"/>
    <node pkg="tf04_test" type="test02_turtle_tf_pub_p.py" name="tf_pub2" args="turtle2" output="screen"/>
    <!-- 4. 订阅坐标信息，并转换成乌龟A相对于乌龟B的坐标信息，最后再生成控制乌龟B的速度信息 -->
    <node pkg="tf04_test" type="test03_turtle_tf_sub_p.py" name="tf_sub" output="screen"/>

</launch>